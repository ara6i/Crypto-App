{"version":3,"sources":["services/cryptoApi.js","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/Loader.jsx","components/News.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","useState","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","coins","filteredData","filter","item","name","toLowerCase","includes","className","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","to","id","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Loader","demoImage","Text","Typography","Title","Option","Select","News","setNewsCategory","cryptoNews","console","log","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","index","style","maxWidth","maxHeight","href","rel","level","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","path","element","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.3982ba8a.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"f0754424bamsh43beabc01aff534p1ac951jsn1810a4f7c592\",\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(\"/exchanges\"),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timeperiod }) =>\r\n        createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetExchangesQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport millify from \"millify\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nfunction Cryptocurrencies({ simplified }) {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  //   console.log(cryptosList);\r\n  const [cryptos, setCryptos] = useState();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  //   console.log(cryptosList && cryptos);\r\n\r\n  //   loging data\r\n  useEffect(() => {\r\n    setCryptos(cryptosList?.data?.coins);\r\n  }, [cryptosList]);\r\n\r\n  //   search data\r\n  useEffect(() => {\r\n    setCryptos(cryptosList?.data?.coins);\r\n\r\n    const filteredData = cryptosList?.data?.coins.filter((item) =>\r\n      item.name.toLowerCase().includes(searchTerm)\r\n    );\r\n\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\r\n          />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n            <Link key={currency.id} to={`/crypto/${currency.id}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {currency.change}%</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cryptocurrencies;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"f0754424bamsh43beabc01aff534p1ac951jsn1810a4f7c592\",\r\n};\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import React, { useState } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\nimport Loader from './Loader';\r\n\r\nconst demoImage =\r\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nfunction News({ simplified }) {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n  console.log(cryptoNews);\r\n\r\n\r\nif (!cryptoNews?.value) return <Loader />;\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((currency) => (\r\n              <Option value={currency.name}>{currency.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, index) => (\r\n        <Col xs={24} sm={12} lg={8} key={index}>\r\n          <Card hoverable className=\"news-card\"  style = {{maxWidth:'400px' , maxHeight : '400px'}}>\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>\r\n                  {news.name}\r\n                </Title>\r\n                <img\r\n                style = {{maxWidth:'200px' , maxHeight : '200px'}}\r\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <p>\r\n                {news.description.length > 100\r\n                  ? `${news.description.substring(0, 100)}...`\r\n                  : news.description}\r\n              </p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar\r\n                    src={\r\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                      demoImage\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                  <Text className=\"provider-name\">\r\n                    {news.provider[0]?.name}\r\n                  </Text>\r\n                </div>\r\n                <Text>\r\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                </Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Cryptocurrencies from \"./Cryptocurrencies\";\r\nimport News from \"./News\";\r\n\r\nconst { Title } = Typography;\r\nfunction Homepage() {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Cryptocurrencies\"\r\n            value={globalStats && globalStats.total}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={globalStats && millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap:\"\r\n            value={globalStats && millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={globalStats && millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={globalStats && millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptos In The World\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show more</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3}>\r\n          <Link to=\"/news\">Show more</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize <= 800) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptoverse</Link></Typography.Title>\r\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n      </div>\r\n      {activeMenu && (\r\n      <Menu theme=\"dark\">\r\n        <Menu.Item icon={<HomeOutlined />}>\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<FundOutlined />}>\r\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<MoneyCollectOutlined />}>\r\n          <Link to=\"/exchanges\">Exchanges</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<BulbOutlined />}>\r\n          <Link to=\"/news\">News</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nfunction Exchanges  () {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\nimport Chart from 'chart.js/auto';\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const cryptoDetails = data?.data?.coin;\r\n// console.log(cryptoDetails.description); raw html elements!!\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;","import React from \"react\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Space } from \"antd\";\r\nimport {\r\n  Exchanges,\r\n  Homepage,\r\n  News,\r\n  Cryptocurrencies,\r\n  CryptoDetails,\r\n  Navbar,\r\n} from \"./components\";\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<Homepage />}></Route>\r\n              <Route path=\"/exchanges\" element={<Exchanges />}></Route>\r\n              <Route\r\n                path=\"/cryptocurrencies\"\r\n                element={<Cryptocurrencies />}\r\n              ></Route>\r\n              <Route path=\"/crypto/:coinId\" element={<CryptoDetails />}></Route>\r\n              <Route path=\"/news\" element={<News />}></Route>\r\n            </Routes>\r\n          </div>\r\n        </Layout>\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Copyright © 2021\r\n            <Link to=\"/\">Cryptoverse Inc.</Link> <br />\r\n            All Rights Reserved.\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n      <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}